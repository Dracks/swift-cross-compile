# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: Generate Swift SDKs

on:
  push:
    branches:
      - feature/fixing-action
  workflow_dispatch:
    inputs:
      releaseName:
        description: 'ReleaseName'
        required: true

jobs:
  build:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4
    - name: Cache build
      id: cache-build
      uses: actions/cache@v4
      with:
        path: .build
        key: ${{ runner.os }}-build
    - name: Build
      run: |
        swift build -c release --product swift-sdk-generator
        cp .build/release/swift-sdk-generator .
    - name: generate linux arm sdk
      run: |
        ./swift-sdk-generator make-linux-sdk --target arm64-unknown-linux-gnu --host amd64-unknown-linux-gnu
        tar -zcvf aarch64-unknown-linux-gnu.tgz --cd .build/checkouts/swift-sdk-generator/Bundles/ 5.10.1-RELEASE_ubuntu_jammy_aarch64.artifactbundle
    - name: generate linux amd64 sdk
      run: |
        ./swift-sdk-generator make-linux-sdk --target amd64-unknown-linux-gnu --host amd64-unknown-linux-gnu
        tar -zcvf amd64-unknown-linux-gnu.tgz --cd .build/checkouts/swift-sdk-generator/Bundles/ 5.10.1-RELEASE_ubuntu_jammy_amd64.artifactbundl
    - name: Create release
      id: createRelease
      uses: actions/create-release@v1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        owner: ${{ github.repositoryOwner }}
        repo: ${{ github.repositoryName }}
        tag_name: ${{ steps.createRelease.outputs.tag_name }}
        release_name: ${{ github.event.inputs.project }}
    - name: Upload assets to release
      uses: actions/upload-artifact@v2
      with:
        name: aarch64-unknown-linux-gnu
        path: ./aarch64-unknown-linux-gnu.tgz
    - name: Upload assets to release
      uses: actions/upload-artifact@v2
      with:
        name: amd64-unknown-linux-gnu
        path: ./amd64-unknown-linux-gnu.tgz
